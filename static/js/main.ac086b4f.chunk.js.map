{"version":3,"sources":["components/calculate.js","components/header.js","components/about.js","components/calculator.js","components/App.js","index.js"],"names":["Calculate","props","className","onClick","handleSubmit","name","type","aria-label","value","data","appliance","onChange","handleChange","step","watts","timeHours","data-toggle","data-placement","title","min","noOfAppliances","cost","handleReset","Header","totalAmount","About","Calculator","state","applianceInput","kW","units","ppkWh","bind","event","target","this","setState","preventDefault","round","toFixed","console","log","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac086b4f.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Calculate(props) {\n  return (\n    <div className=\"form\">\n      <form className=\"formFields w-25 p-3 \" onClick={props.handleSubmit}>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Appliance</span>\n          </div>\n          <input\n            name=\"appliance\"\n            type=\"text\"\n            aria-label=\"Appliance\"\n            className=\"form-control\"\n            value={props.data.appliance}\n            onChange={props.handleChange}\n          />\n        </div>\n        <br />\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Wattage</span>\n          </div>\n\n          <input\n            name=\"watts\"\n            type=\"number\"\n            step=\"5\"\n            aria-label=\"Wattage\"\n            className=\"form-control\"\n            value={props.data.watts}\n            onChange={props.handleChange}\n          />\n        </div>\n\n        <br />\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Usage(hrs)</span>\n          </div>\n\n          <input\n            name=\"timeHours\"\n            type=\"number\"\n            step=\"1\"\n            aria-label=\"Usage\"\n            className=\"form-control\"\n            value={props.data.timeHours}\n            onChange={props.handleChange}\n          />\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-info btn-sm\"\n            data-toggle=\"tooltip\"\n            data-placement=\"left\"\n            title=\"Useage is in hours because it's asking for the total amount of time you will \n            use the appliance over the perion of a month. The best was to calculate is to calculate \n            how long you use the appliance for one day then multiply by the number of days in the month.\"\n          >\n            ?\n          </button>\n        </div>\n        <br />\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">How many?</span>\n          </div>\n          <input\n            name=\"noOfAppliances\"\n            type=\"number\"\n            step=\"1\"\n            aria-label=\"Appliance\"\n            className=\"form-control\"\n            min=\"1\"\n            value={props.data.noOfAppliances}\n            onChange={props.handleChange}\n          />\n        </div>\n        <br />\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Unit Rate</span>\n          </div>\n          <input\n            name=\"cost\"\n            type=\"number\"\n            step=\"0.001\"\n            aria-label=\"Unit Rate\"\n            className=\"form-control\"\n            min=\"10\"\n            value={props.data.cost}\n            onChange={props.handleChange}\n          />\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-info btn-sm\"\n            data-toggle=\"tooltip\"\n            data-placement=\"left\"\n            title=\"Your unit rate can be found one of your most recent utility bills.\"\n          >\n            ?\n          </button>\n        </div>\n\n        <br />\n        <br />\n        <button\n          type=\"button\"\n          className=\"btn btn-success btn-lg btn-block rounded-pill\"\n        >\n          Submit\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-warning btn-lg btn-block rounded-pill\"\n          onClick={props.handleReset}\n        >\n          Reset\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Calculate;\n","import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <h3 className=\"logo\">Energy Efficiency Calculator</h3>\n      <p className=\"result\">\n        Result: The {props.data.appliance} will use approximately Â£\n        {props.data.totalAmount} per month\n      </p>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div className=\"fyi\">\n      <p className=\"warning\">\n        WARNING: Tooltips not working on mobile devices so scroll down for\n        tooltip info if you require it\n      </p>\n      <hr className=\"warning\" />\n      <h4>About the App</h4>\n      <p>\n        Ever wondered which appliances in your house use the most electricity?\n        This app will allow you to find out. This app can be used to calculate\n        the average cost, for electricty, different household appliances use. By\n        using a formula the energy companies use to calcuclate energy efficiency\n        you can do the same with this calculator.\n        <br />\n        <br />\n        Please bear in mind this is only to be used to get an estimated idea of\n        useage as it won't account for Daily Standing Charge (DSC) or VAT.\n        <br />\n        <br />\n      </p>\n      <hr className=\"warning\" />\n      <p className=\"warning\">\n        USAGE: Useage is in hours because it's asking for the total amount of\n        time you will use the appliance over the perion of a month. The best way\n        to calculate this is to calculate how long you use the appliance for one\n        day then multiply by the number of days in the month.\n        <br />\n        <br />\n        UNIT RATE: Your unit rate can be found one of your most recent utility\n        bills.\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport Calculate from \"./calculate\";\nimport Header from \"./header\";\nimport About from \"./about\";\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appliance: \"\",\n      applianceInput: \"\",\n      watts: \"\",\n      kW: \"\",\n      units: \"\",\n      ppkWh: \"\",\n      timeHours: \"\",\n      noOfAppliances: 1,\n      cost: \"\",\n      totalAmount: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var watts = this.state.watts;\n    var timeHours = this.state.timeHours;\n    var noOfAppliances = this.state.noOfAppliances;\n    var cost = this.state.cost;\n    var kW = this.state.kW;\n    var ppkWh = this.state.ppkWh;\n    var units = this.state.units;\n    var totalAmount = this.state.totalAmount;\n    kW = watts / 1000;\n    units = kW * timeHours * noOfAppliances;\n    ppkWh = units * cost;\n    totalAmount = ppkWh / 100;\n    const round = totalAmount.toFixed(2);\n    this.setState({ totalAmount: round });\n    if (round > 0) console.log(this.state.appliance, \"Â£\" + round);\n  }\n\n  handleReset() {\n    this.setState({\n      appliance: \"\",\n      watts: \"\",\n      timeHours: \"\",\n      noOfAppliances: \"\",\n      cost: \"\",\n      kW: \"\",\n      units: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header data={this.state} />\n        <About />\n        <Calculate\n          data={this.state}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          handleReset={this.handleReset}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n\n//calculate() {\n//let appliance = this.state.appliance;\n//var watts = 2600;\n//var kW = watts / 1000.0;\n//var timeHours = 3;\n//var noOfAppliances = 1;\n//var units = kW * timeHours * noOfAppliances;\n//var cost = 15;\n//var ppkWh = units * cost;\n//var totalAmount = ppkWh / 100.0;\n//var t = totalAmount.toFixed(2);\n","import React from \"react\";\nimport Calculator from \"./calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./components/styles/energy.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\") \n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}